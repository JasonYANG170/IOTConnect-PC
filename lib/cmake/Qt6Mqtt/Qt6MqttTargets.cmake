# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.24)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS Qt6::Mqtt Qt6::MqttPrivate)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Create imported target Qt6::Mqtt
add_library(Qt6::Mqtt SHARED IMPORTED)

set_target_properties(Qt6::Mqtt PROPERTIES
  COMPATIBLE_INTERFACE_STRING "QT_MAJOR_VERSION"
  INTERFACE_COMPILE_DEFINITIONS "QT_MQTT_LIB"
  INTERFACE_INCLUDE_DIRECTORIES "C:/Users/qw200/Downloads/qtmqtt-dev/build/Desktop_Qt_6_8_0_MinGW_64_bit-Release/include;C:/Users/qw200/Downloads/qtmqtt-dev/build/Desktop_Qt_6_8_0_MinGW_64_bit-Release/include/QtMqtt"
  INTERFACE_LINK_LIBRARIES "Qt6::Core;Qt6::Network"
  INTERFACE_QT_MAJOR_VERSION "6"
  INTERFACE_SOURCES "\$<\$<BOOL:\$<TARGET_PROPERTY:QT_CONSUMES_METATYPES>>:C:/Users/qw200/Downloads/qtmqtt-dev/build/Desktop_Qt_6_8_0_MinGW_64_bit-Release/src/mqtt/meta_types/qt6mqtt_release_metatypes.json>"
  _qt_config_module_name "mqtt"
  _qt_is_public_module "TRUE"
  _qt_module_has_headers "ON"
  _qt_module_has_private_headers "TRUE"
  _qt_module_has_public_headers "TRUE"
  _qt_module_include_name "QtMqtt"
  _qt_module_interface_name "Mqtt"
  _qt_package_name "Qt6Mqtt"
  _qt_package_version "6.8.0"
  _qt_private_module_target_name "MqttPrivate"
)

# Create imported target Qt6::MqttPrivate
add_library(Qt6::MqttPrivate INTERFACE IMPORTED)

set_target_properties(Qt6::MqttPrivate PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Users/qw200/Downloads/qtmqtt-dev/build/Desktop_Qt_6_8_0_MinGW_64_bit-Release/src/mqtt;\$<\$<BOOL:\$<TARGET_PROPERTY:Qt6::Mqtt,_qt_module_has_private_headers>>:C:/Users/qw200/Downloads/qtmqtt-dev/build/Desktop_Qt_6_8_0_MinGW_64_bit-Release/include/QtMqtt/6.8.0>;\$<\$<BOOL:\$<TARGET_PROPERTY:Qt6::Mqtt,_qt_module_has_private_headers>>:C:/Users/qw200/Downloads/qtmqtt-dev/build/Desktop_Qt_6_8_0_MinGW_64_bit-Release/include/QtMqtt/6.8.0/QtMqtt>;\$<\$<BOOL:\$<TARGET_PROPERTY:Qt6::Mqtt,_qt_module_has_private_headers>>:>;\$<\$<BOOL:\$<TARGET_PROPERTY:Qt6::Mqtt,_qt_module_has_private_headers>>:>"
  INTERFACE_LINK_LIBRARIES "Qt6::CorePrivate;Qt6::Mqtt"
  _qt_config_module_name "mqtt_private"
  _qt_is_private_module "TRUE"
  _qt_package_name "Qt6Mqtt"
  _qt_package_version "6.8.0"
  _qt_public_module_target_name "Mqtt"
)

# Import target "Qt6::Mqtt" for configuration "Release"
set_property(TARGET Qt6::Mqtt APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(Qt6::Mqtt PROPERTIES
  IMPORTED_IMPLIB_RELEASE "C:/Users/qw200/Downloads/qtmqtt-dev/build/Desktop_Qt_6_8_0_MinGW_64_bit-Release/lib/libQt6Mqtt.a"
  IMPORTED_LOCATION_RELEASE "C:/Users/qw200/Downloads/qtmqtt-dev/build/Desktop_Qt_6_8_0_MinGW_64_bit-Release/bin/Qt6Mqtt.dll"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
